package accounts

import "github.com/NordGus/fnncr/internal/adapters/primary/web/app/views/components"

type Account interface {
	Type() string
	Name() string
	Covered() int16
	Balance() string
	Available() string
	InTheRed() bool
}

templ accountName(text string) {
	<h5 class="text-lg inline-block w-fit whitespace-nowrap">{ text }</h5>
}

templ account(acc Account) {
	<account-preview
		class={
			"grid grid-cols-account-preview grid-rows-account-preview gap-2",
			"border-button border-neutral-500 rounded-lg",
			"overflow-clip",
			"min-w-[15vw]",
			"group",
		}
	>
		switch acc.Type() {
			case "normal":
				@normalAccount(acc)
			case "savings":
				@savingsAccount(acc)
			case "loan":
				@loanAccount(acc)
			case "credit":
				@creditAccount(acc)
			case "external":
				@externalAccount(acc)
			default:
				<div>Unsupported Type</div>
		}
	</account-preview>
}

templ normalAccount(acc Account) {
	<div class="row-span-2 w-[3.5rem] flex justify-center items-center">
		<span class="text-4xl">â‚¬</span>
	</div>
	<div class="account-name m-0 p-0 w-full overflow-x-hidden col-span-2 pr-2">
		@accountName(acc.Name())
	</div>
	<div class="flex flex-row-reverse justify-between items-center col-span-2 pr-2">
		<span
			class={
				templ.KV("text-red-500", acc.InTheRed()),
				templ.KV("text-green-500", !acc.InTheRed()),
			}
		>
			{ acc.Balance() }
		</span>
	</div>
}

templ savingsAccount(acc Account) {
	<div class="row-span-2 w-[3.5rem] flex justify-center items-center">
		<span class="text-4xl">S</span>
	</div>
	<div class="account-name m-0 p-0 w-full overflow-x-hidden col-span-2 pr-2">
		@accountName(acc.Name())
	</div>
	<div class="flex flex-row-reverse justify-between items-center col-span-2 pr-2">
		<span
			class={
				templ.KV("text-red-500", acc.InTheRed()),
				templ.KV("text-green-500", !acc.InTheRed()),
			}
		>
			{ acc.Balance() }
		</span>
	</div>
}

templ loanAccount(acc Account) {
	<div class="row-span-2 w-[3.5rem] flex justify-center items-center">
		<span class="text-4xl">L</span>
	</div>
	<div class="account-name m-0 p-0 w-full overflow-x-hidden">
		@accountName(acc.Name())
	</div>
	<div
		class={
			"row-span-2",
			"flex justify-center items-center",
		}
	>
		@components.ProgressCircle(acc.Covered())
	</div>
	<div class="flex flex-row-reverse justify-between items-center">
		<span
			class={
				templ.KV("text-red-500", acc.InTheRed()),
				templ.KV("text-green-500", !acc.InTheRed()),
			}
		>
			{ acc.Balance() }
		</span>
	</div>
}

templ creditAccount(acc Account) {
	<div class="row-span-2 w-[3.5rem] flex justify-center items-center">
		<span class="text-4xl">C</span>
	</div>
	<div class="account-name m-0 p-0 w-full overflow-x-hidden">
		@accountName(acc.Name())
	</div>
	<div
		class={
			"row-span-2",
			"flex justify-center items-center",
		}
	>
		@components.ProgressCircle(acc.Covered())
	</div>
	<div class="flex flex-row-reverse justify-between items-center">
		<span
			class={
				templ.KV("text-red-500", acc.InTheRed()),
				templ.KV("text-green-500", !acc.InTheRed()),
			}
		>
			{ acc.Available() }
		</span>
		<span
			class={ "text-red-500" }
		>
			if acc.Covered() < 100 {
				{ acc.Balance() }
			}
		</span>
	</div>
}

templ externalAccount(acc Account) {
	<div class="row-span-2 w-[3.5rem] min-h-[3.5rem] flex justify-center items-center">
		<span class="text-4xl">EX</span>
	</div>
	<div class="account-name m-0 p-0 w-full overflow-x-hidden col-span-2 pr-2">
		@accountName(acc.Name())
	</div>
	<div class="flex flex-row-reverse justify-between items-center col-span-2 pr-2"></div>
}
